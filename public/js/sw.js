var CACHE_VERSION = 1;var CURRENT_CACHES = {core: 'core-v' + CACHE_VERSION, waiting: 'waiting-v' + CACHE_VERSION, prefetch: 'prefetch-cache-v' + CACHE_VERSION};var RESOURCE_URLS = {core: ['/..', '../Alvie_Style/', '../json-viewer/jquery.json-viewer.css', '../json-viewer/jquery.json-viewer.js', '../Alvie_Style/js/bootstrap.min.js', '../Alvie_Style/notification_style/izitoast.js', '../Alvie_Style/Axios/axios.js', '../Alvie_Style/js/plugins/iCheck/icheck.min.js', '../Alvie_Style/js/shake_animate.js', '../Alvie_Style/js/plugins/chosen/chosen.jquery.js', '../js/timepicki.js', '../Alvie_Style/js/inspinia.js', '../../index.html', '../../src/main.js', '../../src/router/index.js', '../Alvie_Style/js/plugins/metisMenu/jquery.metisMenu.js', 'https://cdn.datatables.net/1.10.5/js/jquery.dataTables.min.js', 'https://cdn.datatables.net/responsive/1.0.4/js/dataTables.responsive.js', '../Alvie_Style/js/plugins/slimscroll/jquery.slimscroll.min.js', '../Alvie_Style/js/plugins/jquery-ui/jquery-ui.min.js', '../Alvie_Style/js/plugins/pace/pace.min.js', '../Alvie_Style/js/plugins/typehead/bootstrap3-typeahead.min.js', '../Alvie_Style/js/plugins/select2/select2.full.min.js', '../Alvie_Style/js/plugins/chosen/chosen.jquery.js', '../Alvie_Style/js/plugins/dataTables/datatables.min.js', '../Alvie_Style/js/plugins/daterangepicker/daterangepicker.js', '../Alvie_Style/js/plugins/toastr/toastr.min.js', '../Alvie_Style/js/plugins/datapicker/bootstrap-datepicker.js', '../Alvie_Style/js/plugins/daterangepicker/daterangepicker.js', '../Alvie_Style/js/plugins/ladda/spin.min.js', '../Alvie_Style/js/plugins/ladda/ladda.min.js', '../Alvie_Style/js/plugins/ladda/ladda.jquery.min.js', 'https://rawgit.com/abodelot/jquery.json-viewer/master/json-viewer/jquery.json-viewer.js', '../images/Alvie.ico', '../Alvie_Style/css/plugins/iCheck/custom.css', '../Alvie_Style/css/plugins/chosen/bootstrap-chosen.css', 'https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js', 'https://use.fontawesome.com/releases/v5.0.12/css/all.css', '../Alvie_Style/css/bootstrap.min.css', '../Alvie_Style/font-awesome/css/font-awesome.css', '../Alvie_Style/css/animate.css', '../Alvie_Style/notification_style/izitoast.css', 'https://cdn.datatables.net/responsive/1.0.4/css/dataTables.responsive.css', '../Alvie_Style/css/plugins/iCheck/custom.css', '../Alvie_Style/css/plugins/clockpicker/clockpicker.css', '../Alvie_Style/css/plugins/daterangepicker/daterangepicker-bs3.css', '../Alvie_Style/css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css', '../Alvie_Style/css/plugins/chosen/bootstrap-chosen.css', '../css/timepicki.css', '../Alvie_Style/css/plugins/select2/select2.min.css', '../Alvie_Style/css/plugins/dataTables/datatables.min.css', '../Alvie_Style/js/plugins/gritter/jquery.gritter.css', '../Alvie_Style/css/plugins/datapicker/datepicker3.css', '../Alvie_Style/css/plugins/toastr/toastr.min.css', '../Alvie_Style/css/plugins/daterangepicker/daterangepicker-bs3.css', '../Alvie_Style/css/plugins/ladda/ladda-themeless.min.css', 'https://cdnjs.cloudflare.com/ajax/libs/metisMenu/2.7.1/metisMenu.min.css', 'https://rawgit.com/abodelot/jquery.json-viewer/master/json-viewer/jquery.json-viewer.css', '../images/Distributor/FirstBank.png', '../Alvie_Style/css/uba.css', '../Alvie_Style/css/style.css', '../Alvie_Style/css/firstbank.css', '../Alvie_Style/css/fidelity.css', '../images/Distributor/fidelity.png', '../Alvie_Style/img/final.png', '../images/Distributor/Uba.png'], prefetch: ['/..', '../Alvie_Style/', '../json-viewer/jquery.json-viewer.css', '../json-viewer/jquery.json-viewer.js', '../Alvie_Style/js/bootstrap.min.js', '../Alvie_Style/notification_style/izitoast.js', '../Alvie_Style/Axios/axios.js', '../Alvie_Style/js/plugins/iCheck/icheck.min.js', '../Alvie_Style/js/shake_animate.js', '../Alvie_Style/js/plugins/chosen/chosen.jquery.js', '../js/timepicki.js', '../Alvie_Style/js/inspinia.js', '../../index.html', '../../src/main.js', '../../src/router/index.js', '../Alvie_Style/js/plugins/metisMenu/jquery.metisMenu.js', 'https://cdn.datatables.net/1.10.5/js/jquery.dataTables.min.js', 'https://cdn.datatables.net/responsive/1.0.4/js/dataTables.responsive.js', '../Alvie_Style/js/plugins/slimscroll/jquery.slimscroll.min.js', '../Alvie_Style/js/plugins/jquery-ui/jquery-ui.min.js', '../Alvie_Style/js/plugins/pace/pace.min.js', '../Alvie_Style/js/plugins/typehead/bootstrap3-typeahead.min.js', '../Alvie_Style/js/plugins/select2/select2.full.min.js', '../Alvie_Style/js/plugins/chosen/chosen.jquery.js', '../Alvie_Style/js/plugins/dataTables/datatables.min.js', '../Alvie_Style/js/plugins/daterangepicker/daterangepicker.js', '../Alvie_Style/js/plugins/toastr/toastr.min.js', '../Alvie_Style/js/plugins/datapicker/bootstrap-datepicker.js', '../Alvie_Style/js/plugins/daterangepicker/daterangepicker.js', '../Alvie_Style/js/plugins/ladda/spin.min.js', '../Alvie_Style/js/plugins/ladda/ladda.min.js', '../Alvie_Style/js/plugins/ladda/ladda.jquery.min.js', 'https://rawgit.com/abodelot/jquery.json-viewer/master/json-viewer/jquery.json-viewer.js', '../images/Alvie.ico', '../Alvie_Style/css/plugins/iCheck/custom.css', '../Alvie_Style/css/plugins/chosen/bootstrap-chosen.css', 'https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js', 'https://use.fontawesome.com/releases/v5.0.12/css/all.css', '../Alvie_Style/css/bootstrap.min.css', '../Alvie_Style/font-awesome/css/font-awesome.css', '../Alvie_Style/css/animate.css', '../Alvie_Style/notification_style/izitoast.css', 'https://cdn.datatables.net/responsive/1.0.4/css/dataTables.responsive.css', '../Alvie_Style/css/plugins/iCheck/custom.css', '../Alvie_Style/css/plugins/clockpicker/clockpicker.css', '../Alvie_Style/css/plugins/daterangepicker/daterangepicker-bs3.css', '../Alvie_Style/css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css', '../Alvie_Style/css/plugins/chosen/bootstrap-chosen.css', '../css/timepicki.css', '../Alvie_Style/css/plugins/select2/select2.min.css', '../Alvie_Style/css/plugins/dataTables/datatables.min.css', '../Alvie_Style/js/plugins/gritter/jquery.gritter.css', '../Alvie_Style/css/plugins/datapicker/datepicker3.css', '../Alvie_Style/css/plugins/toastr/toastr.min.css', '../Alvie_Style/css/plugins/daterangepicker/daterangepicker-bs3.css', '../Alvie_Style/css/plugins/ladda/ladda-themeless.min.css', 'https://cdnjs.cloudflare.com/ajax/libs/metisMenu/2.7.1/metisMenu.min.css', 'https://rawgit.com/abodelot/jquery.json-viewer/master/json-viewer/jquery.json-viewer.css', '../images/Distributor/FirstBank.png', '../Alvie_Style/css/uba.css', '../Alvie_Style/css/style.css', '../Alvie_Style/css/firstbank.css', '../Alvie_Style/css/fidelity.css', '../images/Distributor/fidelity.png', '../Alvie_Style/img/final.png', '../images/Distributor/Uba.png']};var log = console.log.bind(console);self.onerror = console.error.bind(console);/* Moves the contents of one named cached into another.*/var cacheCopy = function (source, destination) {return caches.delete(destination).then(function () {return Promise.all([caches.open(source), caches.open(destination)]).then(function (results) {var sourceCache = results[0];var destCache = results[1];return sourceCache.keys().then(function (requests) {return Promise.all(requests.map(function (request) {return sourceCache.match(request).then(function (response) {return destCache.put(request, response);});}));});});});};var fetchAndCache = function (request, cache) {if (!(request instanceof Request)) {request = new Request(request);}return fetch(request.clone()).then(function (response) {cache.put(request, response.clone());return response;});};var baseUrl = (new URL('./', self.location.href) + '');/* TODO: This is necessary to handle different implementations in the wild The spec defines self.registration, but it was not implemented in Chrome 40.*/var scope;if (self.registration) {scope = self.registration.scope;} else {scope = self.scope || baseUrl;}var prefetch_urls = function (cache) {var now = Date.now();var cachePromises = RESOURCE_URLS.prefetch.map(function (urlToPrefetch) {var url = new URL(urlToPrefetch, location.href);url.search += (url.search ? '&' : '?') + 'cache-bust=' + now;var request = new Request(url, {mode: 'no-cors'});return fetch(request).then(function (response) {if (response.status >= 400) {throw new Error('request for ' + urlToPrefetch + ' failed with status ' + response.statusText);}/* Use the original URL without the cache-busting parameter as the key for cache.put().*/return cache.put(urlToPrefetch, response);}).catch(function (error) {console.log('Not caching ' + urlToPrefetch + ' due to ' + error);});});return Promise.all(cachePromises).then(function () {console.log('Pre-fetching complete.');});};var clean_cache = function (event) {var expectedCacheNames = Object.keys(CURRENT_CACHES).map(function (key) {return CURRENT_CACHES[key];});event.waitUntil(caches.keys().then(function (cacheNames) {return Promise.all(cacheNames.map(function (cacheName) {if (expectedCacheNames.indexOf(cacheName) === -1) {/* If this cache name isn't present in the array of "expected" cache names, then delete it.*/console.log('Deleting out of date cache:', cacheName);return caches.delete(cacheName);}}));}));};function installHandler(e) {/* Put updated resources in a new cache, so that currently running pages get the current versions.*/console.log('Install: ', e);e.waitUntil(caches.delete(CURRENT_CACHES.waiting).then(function () {return caches.open(CURRENT_CACHES.waiting).then(function (core) {var resourceUrls = RESOURCE_URLS.core;return Promise.all(resourceUrls.map(function (relativeUrl) {return fetchAndCache(baseUrl + relativeUrl, core);}));});}));e.waitUntil(caches.open(CURRENT_CACHES.prefetch).then(function (cache) {prefetch_urls(cache);}));}function activateHandler(e) {/* Copy the newly installed cache to the active cache*/console.log('Activate: ', e);e.waitUntil(cacheCopy(CURRENT_CACHES.waiting, CURRENT_CACHES.core));clean_cache(e);}function fetchHandler(e) {var request = e.request;if (request && request.url.indexOf(scope) === -1) {return;}/* Basic read-through caching.*/e.respondWith(caches.open(CURRENT_CACHES.core).then(function (core) {return core.match(request).then(function (response) {if (response) {return response;}/* we didn't have it in the cache, so add it to the cache and return it*/log('runtime caching:', request.url);return fetchAndCache(request, core);});}));}

self.addEventListener('install', installHandler);
self.addEventListener('activate', activateHandler);
self.addEventListener('fetch', fetchHandler);

